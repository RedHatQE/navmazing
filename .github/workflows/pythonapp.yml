name: "python tests+artifacts+release"

on:
  pull_request:
  push:
    branches:
    - main
    tags:
    - "v*"
  release:
    types: [published]


jobs:
  dist:
    runs-on: ubuntu-latest
    name: Python sdist/wheel
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v2
      with:
        python-version: "3.9"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade wheel setuptools build

    - name: Build package
      run: python -m build -o dist/
    - uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist

  test:
    runs-on: ubuntu-latest
    needs: [dist]
    strategy:
      matrix:
        # todo: extract from source
        python-version: [3.6, 3.7, 3.8, 3.9, '3.10']
        install-from: ["dist/*.whl"]
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/cache@v2
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ env.pythonLocation }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools setuptools_scm
        pip install pytest
    - uses: actions/download-artifact@v2
      with:
        name: dist
        path: dist
    - name: install ${{ matrix.install-from }}
      run: pip install ${{ matrix.install-from }}
    - name: pytest
      run: pytest


  dist_check:
    runs-on: ubuntu-latest
    needs: [dist]
    steps:
    - uses: actions/setup-python@v2
      with:
        python-version: "3.9"
    - uses: actions/download-artifact@v2
      with:
        name: dist
        path: dist
    - run: pipx run twine check --strict dist/*

  dist_upload:

    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags') }}
    needs: [dist_check, test]
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: dist
        path: dist
    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.pypi_token }}
